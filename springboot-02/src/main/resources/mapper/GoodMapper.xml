<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bdqn.mapper.GoodMapper">
  <resultMap id="BaseResultMap" type="cn.bdqn.entity.Good">
    <id column="gid" jdbcType="INTEGER" property="gid" />
    <result column="gname" jdbcType="VARCHAR" property="gname" />
    <result column="gprice" jdbcType="DOUBLE" property="gprice" />
    <result column="gcount" jdbcType="INTEGER" property="gcount" />
    <result column="tid" jdbcType="INTEGER" property="tid" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    gid, gname, gprice, gcount, tid, `time`
  </sql>
  <select id="selectByExample" parameterType="cn.bdqn.entity.GoodExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from good
    where gid = #{gid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from good
    where gid = #{gid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.bdqn.entity.GoodExample">
    delete from good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="gid" keyProperty="gid" parameterType="cn.bdqn.entity.Good" useGeneratedKeys="true">
    insert into good (gname, gprice, gcount, 
      tid, `time`)
    values (#{gname,jdbcType=VARCHAR}, #{gprice,jdbcType=DOUBLE}, #{gcount,jdbcType=INTEGER}, 
      #{tid,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="gid" keyProperty="gid" parameterType="cn.bdqn.entity.Good" useGeneratedKeys="true">
    insert into good
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gname != null">
        gname,
      </if>
      <if test="gprice != null">
        gprice,
      </if>
      <if test="gcount != null">
        gcount,
      </if>
      <if test="tid != null">
        tid,
      </if>
      <if test="time != null">
        `time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gname != null">
        #{gname,jdbcType=VARCHAR},
      </if>
      <if test="gprice != null">
        #{gprice,jdbcType=DOUBLE},
      </if>
      <if test="gcount != null">
        #{gcount,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.bdqn.entity.GoodExample" resultType="java.lang.Long">
    select count(*) from good
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update good
    <set>
      <if test="record.gid != null">
        gid = #{record.gid,jdbcType=INTEGER},
      </if>
      <if test="record.gname != null">
        gname = #{record.gname,jdbcType=VARCHAR},
      </if>
      <if test="record.gprice != null">
        gprice = #{record.gprice,jdbcType=DOUBLE},
      </if>
      <if test="record.gcount != null">
        gcount = #{record.gcount,jdbcType=INTEGER},
      </if>
      <if test="record.tid != null">
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        `time` = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update good
    set gid = #{record.gid,jdbcType=INTEGER},
      gname = #{record.gname,jdbcType=VARCHAR},
      gprice = #{record.gprice,jdbcType=DOUBLE},
      gcount = #{record.gcount,jdbcType=INTEGER},
      tid = #{record.tid,jdbcType=INTEGER},
      `time` = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.bdqn.entity.Good">
    update good
    <set>
      <if test="gname != null">
        gname = #{gname,jdbcType=VARCHAR},
      </if>
      <if test="gprice != null">
        gprice = #{gprice,jdbcType=DOUBLE},
      </if>
      <if test="gcount != null">
        gcount = #{gcount,jdbcType=INTEGER},
      </if>
      <if test="tid != null">
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        `time` = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where gid = #{gid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.bdqn.entity.Good">
    update good
    set gname = #{gname,jdbcType=VARCHAR},
      gprice = #{gprice,jdbcType=DOUBLE},
      gcount = #{gcount,jdbcType=INTEGER},
      tid = #{tid,jdbcType=INTEGER},
      `time` = #{time,jdbcType=TIMESTAMP}
    where gid = #{gid,jdbcType=INTEGER}
  </update>
</mapper>